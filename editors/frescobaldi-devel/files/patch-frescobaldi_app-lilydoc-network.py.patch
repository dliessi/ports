*** frescobaldi_app/lilydoc/network.py.orig	2013-09-05 15:05:02.000000000 +0200
--- frescobaldi_app/lilydoc/network.py	2013-09-05 15:07:38.000000000 +0200
*************** Network-related utility functions for Li
*** 22,29 ****
  """
  
  import locale
  
! from PyQt4.QtCore import QSettings
  from PyQt4.QtNetwork import QNetworkReply, QNetworkRequest
  
  import app
--- 22,30 ----
  """
  
  import locale
+ import re
  
! from PyQt4.QtCore import QSettings, QLocale
  from PyQt4.QtNetwork import QNetworkReply, QNetworkRequest
  
  import app
*************** def langs():
*** 59,74 ****
      elif lang == "default":
          lang = s.value("language", "", type(""))
          if not lang:
              try:
!                 lang = locale.getdefaultlocale()[0]
              except ValueError:
                  return []
          if not lang or lang == "none":
              return []
!     if '_' in lang:
!         return [lang, lang.split('_')[0]]
!     else:
!         return [lang]
  
  
  class NetworkAccessManager(networkaccessmanager.NetworkAccessManager):
--- 60,87 ----
      elif lang == "default":
          lang = s.value("language", "", type(""))
          if not lang:
+             # list of system preferred locales in order of preference
+             lang = QLocale().uiLanguages()
+         if not lang:
              try:
!                 lang = [locale.getdefaultlocale()[0]]
              except ValueError:
                  return []
          if not lang or lang == "none":
              return []
!     if isinstance(lang, basestring):
!         lang = [lang]
!     for i, l in enumerate(lang):
!         # language/country codes in Accept-Language headers must have '-' and not '_'
!         if '_' in l:
!             l = re.sub('_', '-', l)
!         # if there is a language/country code, insert also the generic language code
!         if '-' in l:
!             lang[i] = l
!             lsplit = l.split('-')[0]
!             if lsplit not in lang:
!                 lang.insert(i + 1, lsplit)
!     return lang
  
  
  class NetworkAccessManager(networkaccessmanager.NetworkAccessManager):
