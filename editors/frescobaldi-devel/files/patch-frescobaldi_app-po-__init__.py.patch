*** frescobaldi_app/po/__init__.py.orig	2013-09-05 15:05:02.000000000 +0200
--- frescobaldi_app/po/__init__.py	2013-09-05 15:07:38.000000000 +0200
*************** Internationalisation.
*** 23,28 ****
--- 23,31 ----
  
  import __builtin__
  import os
+ import re
+ 
+ from PyQt4.QtCore import QTimer, QLocale
  
  from . import mofile
  
*************** podir = __path__[0]
*** 31,37 ****
  def available():
      """Returns a list of language shortnames for which a MO file is available."""
      return [name[:-3] for name in os.listdir(podir) if name.endswith(".mo")]
!  
  def find(language):
      """Returns a .mo file for the given language.
      
--- 34,60 ----
  def available():
      """Returns a list of language shortnames for which a MO file is available."""
      return [name[:-3] for name in os.listdir(podir) if name.endswith(".mo")]
!     
! def defaultLanguageFromQLocale():
!     # list of system preferred locales in order of preference
!     oslanguagelist = QLocale().uiLanguages()
!     # list of available MO files
!     applanguagelist = available()
!     # append English language: an English locale/language preference
!     # in oslanguagelist would otherwise be ignored
!     applanguagelist.append('en')
!     # remove unsupported languages (regardless of country) from oslanguagelist
!     oklanguagelist = []
!     for i, oslang in enumerate(oslanguagelist):
!         # in some systems, language/country codes have '-' and not '_'
!         if '-' in oslang:
!             oslang = re.sub('-', '_', oslang)
!         if any(oslang.split('_')[0] in applang for applang in applanguagelist):
!             oklanguagelist.append(oslang)
!     # keep the first of the supported locales in the preference order, if any
!     if len(oklanguagelist) > 0:
!         return oklanguagelist[0]
!     
  def find(language):
      """Returns a .mo file for the given language.
      
